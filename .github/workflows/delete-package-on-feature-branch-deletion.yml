name: Delete Package on Feature Branch Deletion

on:
  delete:
    branches:
      - "**"

jobs:
  delete_package:
    runs-on: ubuntu-latest
    steps:
      - name: Debug GitHub context
        run: echo "${{ toJson(github) }}"

      - name: Extract branch name
        id: branch_name
        run: |
          EVENT_PATH=$(realpath "${{ github.event_path }}")
          echo "Event path: $EVENT_PATH"
          cat "$EVENT_PATH"
          BRANCH_NAME=$(jq --raw-output '.ref' "$EVENT_PATH")
          echo "Branch name: $BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Debug extracted branch name
        run: echo "Extracted branch name: ${{ env.BRANCH_NAME }}"

      - name: Delete package version associated with the deleted branch
        run: |
          ORGANIZATION="${{ github.repository_owner }}"
          PACKAGE_NAME="${{ github.event.repository.name }}"
          BRANCH_NAME="${{ env.BRANCH_NAME }}"
          VERSION_TAG_PATTERN=".*\"$BRANCH_NAME\"$"

          echo "Searching package versions to delete for branch: $BRANCH_NAME"

          PACKAGE_INFO=$(curl -v -X GET "https://api.github.com/orgs/$ORGANIZATION/packages/npm/$PACKAGE_NAME/versions" \
            -H "Authorization: bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json")

          echo "Package info:"
          echo "$PACKAGE_INFO"

          VERSION_IDS=$(echo "$PACKAGE_INFO" | jq -r --arg VERSION_TAG_PATTERN "$VERSION_TAG_PATTERN" '.[] | select(.name | endswith($VERSION_TAG_PATTERN)) | .id')

          echo "Version IDs to delete: $VERSION_IDS"

          if [ -z "$VERSION_IDS" ]; then
              echo "::notice title=Package Deletion::No matching versions found for branch $BRANCH_NAME."
          else
              for VERSION_ID in $VERSION_IDS; do
                  echo "::notice title=Package Deletion::Deleting package version ID: $VERSION_ID"
                  curl -v -X DELETE "https://api.github.com/orgs/$ORGANIZATION/packages/npm/$PACKAGE_NAME/versions/$VERSION_ID" \
                    -H "Authorization: bearer ${{ secrets.GITHUB_TOKEN }}" \
                    -H "Accept: application/vnd.github.v3+json"
              done
          fi
