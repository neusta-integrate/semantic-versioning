name: Publish Semantic Release

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Node.js 20
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    - name: Install dependencies
      run: npm clean-install
    - name: Run commit analyzer and update package.json
      run: |
        VERSION=$(npx semantic-release --dry-run | grep 'The next release version is' | sed 's/.*is //')
        jq '.version="'$VERSION'"' package.json > temp.json && mv temp.json package.json
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    - name: Commit update version
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json
        git commit -m "chore: update version to $VERSION"
        git push -f
        echo "LAST_COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
        echo "IS_VERSION_UPDATE_COMMIT_COMLETED=true" >> $GITHUB_ENV
    - name: Revert "Commit update version" on failure
      if: failure() && env.IS_VERSION_UPDATE_COMMIT_COMLETED
      run: |
        git reset --hard ${{ env.LAST_COMMIT_SHA }}^
        git push origin HEAD:${{ github.ref }} --force
