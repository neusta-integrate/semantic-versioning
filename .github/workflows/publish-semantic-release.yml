name: Publish Semantic Release

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Node.js 20
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    - name: Install dependencies
      run: npm clean-install
    - name: Semantic Release
      run: |
        npx semantic-release
        echo "IS_SEMANTIC_RELEASE_COMLETED=true" >> $GITHUB_ENV
    - name: Publish
      if: success()
      run: |
        npm run publish-release
        echo "IS_PUBLISH_COMLETED=true" >> $GITHUB_ENV
    - name: Revert "Publish" on failure
      if: failure() && env.IS_PUBLISH_COMLETED
      run: |
        RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ env.VERSION }}" \
          | jq -r '.id')
        if [ "$RELEASE_ID" != "null" ]; then
          curl -s -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID"
        fi
    - name: Revert "Semantic Release" on failure
      if: failure() && env.IS_SEMANTIC_RELEASE_COMLETED
      run: |
        git push --delete origin v${{ env.VERSION }}
        git tag -d v${{ env.VERSION }}
