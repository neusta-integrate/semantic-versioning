name: Publish to GitHub Registry

on:
  push:
    branches:
      - main

permissions:
  contents: read # for checkout
      
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish add GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Node.js 20
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    - name: Install dependencies
      run: npm clean-install
    - name: Run commit analyzer and update package.json
      run: |
        VERSION=$(npx semantic-release --dry-run | grep 'The next release version is' | sed 's/.*is //')
        jq '.version="'$VERSION'"' package.json > temp.json && mv temp.json package.json
    - name: Commit package.json
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json
        git commit -m "chore: update version to $VERSION"
        git push
    - name: Store the last commit SHA
      run: echo "LAST_COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
    - name: Semantic Release
      run: npx semantic-release
    - name: Publish
      run: npm run publish-release
    - name: Revert last commit if failure
      if: failure()
      run: |
        git revert --no-edit ${{ env.LAST_COMMIT_SHA }}
        git push origin HEAD:${{ github.ref }}
